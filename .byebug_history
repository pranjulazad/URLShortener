exit
site_url = record.long_url
record = SiteUrl.where(hash_code: url_hash_code).first
c
site_url = record.long_url
site_url.blank?
record = SiteUrl.where(hash_code: url_hash_code).first
Cache::Redis.contains?(url_hash_code)
c
exit
uri.password
uri.path[1..-1].to_s
uri.port.to_s
uri.host
uri = URI.parse(redis_url)
redis_url = ENV.fetch('REDIS_URL', "redis://localhost:6379/#{ENV['TEST_ENV_NUMBER']}/cache")
Cache::Redis.contains?(url_hash_code)
url_hash_code
Cache::Redis.contains?()
Cache::Redis.contains?("k")
Cache::Redis.contains?
url_hash_code.con
Cache::Redis.contains?(url_hash_code)
exit
Cache::Redis.cache.get("kk")
Cache::Redis.cache.set("kk","11")
Cache::Redis.cache.exists?("11")
Cache::Redis.cache.exists?
Cache::Redis.cache.exist?
Cache::Redis.cache
Cache::Redis.methods
Cache::Redis
Cache::Redis.contains?(url_hash_code)
url_hash_code
exit
ENV['TEST_ENV_NUMBER'] = "11"
ENV['TEST_ENV_NUMBER'] = 143
ENV['TEST_ENV_NUMBER']
ENV
c
request.params["code"]
exit
request.params
request.params["errors"] = @site.errors
request.params["errors"]
request.params.errors
request.params
c
request.params
exit
request.flash
request.methods
request.body.value
request.body.values
request.body
request.params
request
request.url
@site
c
request.as_json
request.to_json
request.body
request.params
c
exit
@site.errors
@site
exit
@site.errors
@site
c
exit
request.body
request.methods
request
response
object
request.params
object
@site
Site
c
request.params
request
exit
@site.save!
@site
exit
site.long_url
site
c
@site
c
a
a.long_url = "val"
a.long_url
a = SiteUrl.new()
SiteUrl.new(:long_url => "a")
SiteUrl.new(long_url: "a")
SiteUrl.new
@site
@site.values
@site.hash_code
@site.methods
@site.long_url
@site
exit
rand.hash.to_s[1..7]
rand.hash.to_s[1..6]
rand.hash.to_s[..7]
rand.hash.to_s[:7]
rand.hash.to_s.strip(7)
rand.hash.to_s.strip
rand.hash.to_s
rand.hash.strip
rand.hash
request.params["id"].to_i
request.params["id"].int
request.params["id"]
request.params["id]
request.params
c
exit
request.params
request
response
c
@site
exit
@site
request.params["long_url"]
@site.long_url
@site
exit
@site
exit
request.params
request.parans
request
c
hello
c
